{"version":3,"file":"async-value.js","sourceRoot":"","sources":["../../src/async-value.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,MAAM,OAAO,UAAU;IACrB,YACkB,OAAwB,EACjC,KAAc,EACd,KAAa;QAFJ,YAAO,GAAP,OAAO,CAAiB;QACjC,UAAK,GAAL,KAAK,CAAS;QACd,UAAK,GAAL,KAAK,CAAQ;QAEpB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;IAC3E,CAAC;CACF","sourcesContent":["/**\n * An `AsyncValue` provides a promise and as soon as the promise resolves or\n * rejects, also exposes the returned value or error. It is useful for\n * accessing a promise value in a synchronous context.\n */\nexport class AsyncValue<TValue> {\n  public constructor(\n    public readonly promise: Promise<TValue>,\n    public value?: TValue,\n    public error?: Error\n  ) {\n    promise.then(val => (this.value = val)).catch(err => (this.error = err));\n  }\n}\n"]}