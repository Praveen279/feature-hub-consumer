{"version":3,"file":"feature-app-container.js","sourceRoot":"","sources":["../../src/feature-app-container.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  FeatureAppDefinition,\n  FeatureAppEnvironment,\n  FeatureAppScope,\n  FeatureServices\n} from '@feature-hub/core';\nimport * as React from 'react';\nimport {\n  FeatureHubContextConsumer,\n  FeatureHubContextConsumerValue\n} from './feature-hub-context';\nimport {\n  isDomFeatureApp,\n  isFeatureApp,\n  isReactFeatureApp\n} from './internal/type-guards';\n\n/**\n * The recommended way of writing a Feature App for a React integrator.\n */\nexport interface ReactFeatureApp {\n  /**\n   * A React Feature App must define a `render` method that returns a React\n   * element. Since this element is directly rendered by React, the standard\n   * React lifecyle methods can be used (if `render` returns an instance of a\n   * React `ComponentClass`).\n   */\n  render(): React.ReactNode;\n}\n\n/**\n * A DOM Feature App allows the use of other frontend technologies such as\n * Vue.js or Angular, although it is placed on a web page using React.\n */\nexport interface DomFeatureApp {\n  /**\n   * @param container The container element to which the Feature App can attach\n   * itself.\n   */\n  attachTo(container: Element): void;\n}\n\n/**\n * A Feature App that can be rendered by the [[FeatureAppLoader]] or\n * [[FeatureAppContainer]] must be either a [[ReactFeatureApp]]\n * (recommended) or a [[DomFeatureApp]].\n */\nexport type FeatureApp = ReactFeatureApp | DomFeatureApp;\n\nexport interface FeatureAppContainerProps<\n  TFeatureApp,\n  TFeatureServices extends FeatureServices = FeatureServices,\n  TConfig = unknown\n> {\n  /**\n   * The Feature App ID is used to identify the Feature App instance. Multiple\n   * Feature App Loaders with the same `featureAppId` will render the same\n   * Feature app instance. The ID is also used as a consumer ID for dependent\n   * Feature Services. To render multiple instances of the same kind of Feature\n   * App, different IDs must be used.\n   */\n  readonly featureAppId: string;\n\n  /**\n   * The absolute or relative base URL of the Feature App's assets and/or BFF.\n   */\n  readonly baseUrl?: string;\n\n  /**\n   * The consumer definition of the Feature App.\n   */\n  readonly featureAppDefinition: FeatureAppDefinition<\n    TFeatureApp,\n    TFeatureServices,\n    TConfig\n  >;\n\n  /**\n   * A config object that is passed to the Feature App's `create` method.\n   */\n  readonly config?: TConfig;\n\n  /**\n   * A callback that is called before the Feature App is created.\n   */\n  readonly beforeCreate?: (\n    env: FeatureAppEnvironment<TFeatureServices, TConfig>\n  ) => void;\n\n  readonly onError?: (error: Error) => void;\n\n  readonly renderError?: (error: Error) => React.ReactNode;\n}\n\ntype InternalFeatureAppContainerProps<\n  TFeatureApp,\n  TFeatureServices extends FeatureServices,\n  TConfig\n> = FeatureAppContainerProps<TFeatureApp, TFeatureServices, TConfig> &\n  Pick<FeatureHubContextConsumerValue, 'featureAppManager' | 'logger'>;\n\ntype InternalFeatureAppContainerState<TFeatureApp extends FeatureApp> =\n  | {readonly featureAppError: Error}\n  | {readonly featureApp: TFeatureApp};\n\nclass InternalFeatureAppContainer<\n  TFeatureApp extends FeatureApp,\n  TFeatureServices extends FeatureServices = FeatureServices,\n  TConfig = unknown\n> extends React.PureComponent<\n  InternalFeatureAppContainerProps<TFeatureApp, TFeatureServices, TConfig>,\n  InternalFeatureAppContainerState<TFeatureApp>\n> {\n  private readonly featureAppScope?: FeatureAppScope<TFeatureApp>;\n  private readonly containerRef = React.createRef<HTMLDivElement>();\n\n  public constructor(\n    props: InternalFeatureAppContainerProps<\n      TFeatureApp,\n      TFeatureServices,\n      TConfig\n    >\n  ) {\n    super(props);\n\n    const {\n      baseUrl,\n      beforeCreate,\n      config,\n      featureAppDefinition,\n      featureAppId,\n      featureAppManager\n    } = props;\n\n    try {\n      this.featureAppScope = featureAppManager.createFeatureAppScope(\n        featureAppId,\n        featureAppDefinition,\n        {baseUrl, config, beforeCreate}\n      );\n\n      if (!isFeatureApp(this.featureAppScope.featureApp)) {\n        throw new Error(\n          'Invalid Feature App found. The Feature App must be an object with either 1) a `render` method that returns a React element, or 2) an `attachTo` method that accepts a container DOM element.'\n        );\n      }\n\n      this.state = {featureApp: this.featureAppScope.featureApp};\n    } catch (error) {\n      this.handleError(error);\n\n      this.state = {featureAppError: error};\n    }\n  }\n\n  public componentDidCatch(error: Error): void {\n    this.handleError(error);\n\n    this.setState({featureAppError: error});\n  }\n\n  public componentDidMount(): void {\n    const container = this.containerRef.current;\n\n    if (\n      container &&\n      'featureApp' in this.state &&\n      isDomFeatureApp(this.state.featureApp)\n    ) {\n      try {\n        this.state.featureApp.attachTo(container);\n      } catch (error) {\n        this.componentDidCatch(error);\n      }\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this.featureAppScope) {\n      try {\n        this.featureAppScope.release();\n      } catch (error) {\n        this.handleError(error);\n      }\n    }\n  }\n\n  public render(): React.ReactNode {\n    if ('featureAppError' in this.state) {\n      return this.renderError(this.state.featureAppError);\n    }\n\n    if (isReactFeatureApp(this.state.featureApp)) {\n      try {\n        return this.state.featureApp.render();\n      } catch (error) {\n        this.handleError(error);\n\n        return this.renderError(error);\n      }\n    }\n\n    return <div ref={this.containerRef} />;\n  }\n\n  private renderError(error: Error): React.ReactNode {\n    return this.props.renderError ? this.props.renderError(error) : null;\n  }\n\n  private handleError(error: Error): void {\n    const {logger, onError} = this.props;\n\n    if (onError) {\n      onError(error);\n    } else {\n      logger.error(error);\n    }\n  }\n}\n\n/**\n * The `FeatureAppContainer` component allows the integrator to bundle Feature\n * Apps instead of loading them from a remote location. It can also be used by\n * a Feature App to render another Feature App as a child.\n *\n * When a Feature App throws an error while rendering or, in the case of a\n * [[ReactFeatureApp]], throws an error in a lifecycle method, the\n * `FeatureAppContainer` renders `null`. On the server, however, rendering\n * errors are not caught and must therefore be handled by the integrator.\n */\nexport function FeatureAppContainer<\n  TFeatureApp extends FeatureApp,\n  TFeatureServices extends FeatureServices = FeatureServices,\n  TConfig = unknown\n>(\n  props: FeatureAppContainerProps<TFeatureApp, TFeatureServices, TConfig>\n): JSX.Element {\n  return (\n    <FeatureHubContextConsumer>\n      {({featureAppManager, logger}) => (\n        <InternalFeatureAppContainer<TFeatureApp, TFeatureServices, TConfig>\n          featureAppManager={featureAppManager}\n          logger={logger}\n          {...props}\n        />\n      )}\n    </FeatureHubContextConsumer>\n  );\n}\n"]}